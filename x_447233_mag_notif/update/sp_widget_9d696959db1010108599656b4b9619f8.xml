<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope, $scope, $sce, $timeout, $location, $log, $window, spUtil, spNavStateManager) {
	/* widget controller */	
	var c = this;
	var g_form;

	$scope.submitting = false;
	$scope.mandatory = [];
	$scope.errorMessages = [];
	$scope.data.show_sql = false;
	$scope.saveButtonSuffix = spUtil.getAccelerator('s');
	$scope.adminMenu = {
		//		getClientScriptCount: function() {
		//			var count = 0;
		//			if ($scope.data.f.client_script) {
		//				count += $scope.data.f.client_script.onChange.length;
		//				count += $scope.data.f.client_script.onLoad.length;
		//				count += $scope.data.f.client_script.onSubmit.length;
		//			}
		//			return count;
		//		},
		encodedPageUrl: encodeURIComponent($location.url())
	};

//	console.log("$sce.trustAsHtml($scope.data.messageHTML_content) = " + $sce.trustAsHtml($scope.data.messageHTML_content))




	///////////////////////////////////
	// All the event handler definitions
	///////////////////////////////////
	$scope.$on('window', function(e, gFormInstance) {
//		localFunctions.initForm(gFormInstance);
	});
	
	$scope.variable_to_clipboard = function(text) {
		if (!text){
			spUtil.addErrorMessage("Unable to copy without selection.");
			return;
		}
		// Wrap with the right syntax
		var $lcb = '{'; // "{'{'}";
		var $rcb = '}'; //  "{'}'}";
		text = "$" + $lcb + text + $rcb;
		
		// Create temporary element
		var $d = $window.document;
		var copiable_text = $d.createElement("textarea"); // Type == input
		copiable_text.innerText = text;
		
		/* Append +Select +Copy +Remove */
		jQuery("body").append(copiable_text);
		copiable_text.select();
		copiable_text.setSelectionRange(0, 99999); /*For mobile devices*/
		var copied = $d.execCommand("copy"); // Element MUST be in the DOM
		copiable_text.remove();

		if (copied){
			spUtil.addInfoMessage("Copied to clipboard: " + text);
		}
		else
			spUtil.addErrorMessage("Unable to copy: " + text);
	};
	
	
	///////////////////////////////////
	// Client-controller Functions
	///////////////////////////////////

	c.saveRecord = function() {
//		c.data.f._fields.subject.value = c.data.subject_content;
//		c.data.f._fields.message_html.value = c.data.messageHTML_content;

		c.data.mag = {
			operation: "saveRecord",
			usr_action: "saveRecord",
			subject_content_new: c.data.subject_content,
			messageHTML_content_new: c.data.messageHTML_content
		};

		spUtil.update($scope).then(function(resp) {
			spUtil.addInfoMessage("Values have been saved!")
			
			// ToDo: send signal to "Preview" Widget to update in real time
			// ToDo: And fix this whole thing altogether
		});
	}
}


var localFunctions = {
	initForm: function(gFormInstance){
//			spNavStateManager.register($scope.data.table, _save, g_form);
		return gFormInstance;
	}
}

]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn-form-menu {
  vertical-align: inherit;
  padding: inherit;
  background: none;
}

.panel-title {
  word-wrap: break-word;
}

.panel-heading {
  .dropdown-menu {
    a {
      white-space: normal;
    }
  }
}

.sc-field-error-label {
  margin-right: .5em;
  display: inline-block;
  background-color: $sc-field-error-color;
}

.comment {
  font-weight: bold;
  margin-top: 2px;
  margin-bottom: 2px;
}
.mce-panel, .mce-btn {
  background-image: none;
  background-color: #f0f3f4;
}

.action-btn {
  margin-right: 5px;
}

.timeline-container {
  max-height: 50vh;
  height: 100%;
  overflow-y: auto;
}

.panel .panel {
  height: auto !important;
}

.attachment-button {
  .glyphicon-paperclip {
    font-size: 18px;
  }
}

.dropdown {
  .glyphicon-menu-hamburger:focus {
    outline: thin dotted;
    outline: 5px auto $input-border-focus;
    outline-offset: -2px; 
  }
}

.empty-state-wrapper {
  width: 100%;
  height: 100%;
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 10vh 20px 20px;

  .empty-state {
    border: 1px solid #e7e9eb;
    border-radius: 10px;
    max-width: 700px;
    padding: 30px 40px 20px;
    position: relative;

    .empty-state-badge {
      top: -36px;
      left: 50%;
      position: absolute;
      height: 72px;
      width: 72px;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      border-radius: 100%;
      color: #ffffff;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      font-size: 40px;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin-left: -36px;
      text-align: center;
    }

    .empty-state-header {
      font-size: 30px;
      text-align: center;
      color: #343d47;
    }

    .empty-state-content {
      ul {
        list-style: disc outside;
        margin: 0 0 10px 0;
        padding: 0 0 0 30px;
      }
    }
  }
}

.text-success-alt {
  background-color: $state-success-text;
}

.text-info-alt {
  background-color: $state-info-text;
}

.sp-cross-scope-msg {
  margin-bottom: 10px;
}

#simulated_html_iframe {
  width: 100%;
  height: 40vh;

  border-width: thin;
  border-color: gray;
}





///////////////////////////////////////
// MAG Styling of the whole Body Editor
///////////////////////////////////////

#InputBodyEditor {
  margin-top: 3em;
  
  .mce-container &gt; .mce-container-body {
      border-radius: 1em;
  }
  
  .mce-container &gt; iframe {
    min-height: 40vh;
  }
  
    
  // MAG HTML box styling
  #MessageHTMLBox {
    width: 100%;
    height: 40vh;

    border-width: thin;
    border-color: gray;

    display: block;
    top: 0;
    left: 0;
    float: left;
    
    

    // Remove weird 'Alt F10 to focus' message
    &amp;&gt;div:first-child {
      display: none;
    } // Ensuring tha this won't remove the editor if the first child changes (because of accessibility options)
    &amp;&gt;div.mce-container:first-child {
      display: block;
    }
    
  }
  
}








///////////////////////////////////////
// MAG Styling of the aside panel for vbles
///////////////////////////////////////

aside.panel-group {
  width: 20em;
  position: absolute;
  right: 1em;

  section.panel {
    border-radius: 1em;
    box-shadow: -3px 3px 10px 0px rgba(0, 0, 0, .4);
    -webkit-box-shadow: -3px 3px 10px 0px rgba(0, 0, 0, .4);

    max-height: 40vh;
    overflow-y: scroll;
  }


  header.panel-heading {
    border-radius: 1em 1em 0em 0em;
  }

  .panel-footer {
    text-align: center;
    bottom: -1px;
    position: sticky;
  }

  header, li {
    padding: 1em;
    
    .tree_icon_in {
      margin: 0 0.5em;
    }
    
  }
}


// MAG -- Template field &amp; link
.link_box {
  border: 1px darkgray;
}





#sp_formfield_template, #sp_formfield_subject, #sp_save_button {
  display: inline-block;
}

.input_field {
  width: 70%;
}

.input_label {
  min-width: 10%;
  margin-right: 1em;
  margin-left: 0.3em;
}

#sp_save_button {
  display: inline-block;
  top: 1em;
  right: 1em;
  position: absolute;
  height: 6em;
  width: 5em;
  margin: 1em;
}

#DialogNoData {
  width: 100%;
  height: 100%;
  display: block;
  position: relative;
  min-height: 50vh;
  dialog[open] {
    top: 50%;
    position: absolute;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  #non_standard_comment {
  content: "test_comment";
  }
}

div#EditableContent {
    margin: 2em;
}

*[disabled] {
    background: #ddd;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>notif_form</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>MAG Notif Form</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[// form functionality - URL parameter driven
(function ($sp, input, data, options, gs) {

	try {
		/* "use strict"; -linter issues */

		
		///////////////////////////////////
		// Pre-populate the 'data' variable
		///////////////////////////////////
		data.f = {};
		data.recordAddedMsg = gs.getMessage("Record Added");
		data.updatedMsg = gs.getMessage("updated_uppercase");

		
		//  var security_mgr = GlideSecurityManager.get();
		//  var right_path = "sp/configure.all/execute";
		//  var canDelete = security_mgr.hasRightsTo(right_path, null);
		data.isAdmin = false; // gs.hasRightsTo('sp/configure.all/execute', null);
		data.emptyStateTemplate = options.empty_state_template;
		data.disableUIActions = options.disableUIActions === "true";
		data.hideRelatedLists = options.hideRelatedLists || false;

		data.table =
			data.table ||
			$sp.getParameter("t") ||
			$sp.getParameter("table") ||
			$sp.getParameter("sl_table") ||
			options.table;
		data.sys_id =
			data.sys_id ||
			$sp.getParameter("sys_id") ||
			$sp.getParameter("sl_sys_id") ||
			options.sys_id;
		if (!data.sys_id && options.sys_id_required != "true")
			data.sys_id = "-1";


		data.view =
			options.view ||
			$sp.getParameter("view") ||
			$sp.getParameter("v"); // no default

		
		
		
		
		///////////////////////////////////
		// Use values from 'input'
		///////////////////////////////////
		if (input) {
			// input == c.data on client
			input.table = input.table || data.table;
			input.sys_id = input.sys_id || data.sys_id;

			if (input.mag && input.mag.usr_action == "saveRecord") {
				var result = $sp.saveRecord(input.table, input.sys_id, input.f._fields);
				data.sys_id = result.sys_id;
			}

			if (input.sys_id == "-1") {
				data.isNewRecord = true;
				return;
			}
		}

		///////////////////////////////////
		// Pick up the target record
		///////////////////////////////////

		data.isTargetValid = null;
		data.preview_url = null;

		var rec = null;
		// rec = $sp.getRecord(data.table, data.sys_id);
		rec = $sp.getRecord();
		//			rec = new GlideRecord(data.table);

		if (!rec || !rec.isValid() || data.sys_id == -1){	
			gs.warn("NOTIFs Widget::Form: Finished early with invalid table or ID");
			return;
		}
		// LEGACY: Check if Sys_id having the right "shape"
//		var sys_id_str = (data.sys_id || "").toString();
		//		if (sys_id_str.match(/^\w{32}$/) != null)
	
		
		// For extensions, I suppose??:
		//	data.table = rec.getRecordClassName();
		//	data.tableHierarchy = GlideDBObjectManager.getTables(data.table)
		//		.toArray()
		//		.join();

		
		///////////////////////////////////
		// Confirmed record. Setup the form
		///////////////////////////////////

		data.table_tmce = data.table + "_tmce";
		data.isTargetValid = true;
		data.canWrite = rec.canWrite();
		var hasRecordAccess = data.sys_id == "-1" ? rec.canCreate() : data.canWrite;
		data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

		///////////////////////////////////
		// Scope Checks (NOT Working)
		///////////////////////////////////

		// Show message when record is in cross app scope
		// ERROR: Function isInSelectedScope is not allowed in scope x_447233_mag_notif
		data.f.outOfScope = false; // TODO: !rec.isInSelectedScope();
		// Populate scope labels only when needed
		if (data.f.outOfScope) {
			//Function getScopeLabelByRecordId is not allowed in scope
			data.f.recordScopeLabel = gs.getScopeLabelByRecordId(rec.getUniqueValue());
			data.f.currentScopeLabel = gs.getCurrentApplicationName();
		}

		// MAG NOTE: I might need this if some Notifications have only text?
		//	data.messageHTML_content =
		//		rec.getValue("message_html") || rec.getValue("message_text") || rec.getValue("message");
		
		
		
		///////////////////////////////////
		// Create the list of fields to use in the eMail
		///////////////////////////////////
		if (data.f && data.f._fields && data.f._fields.collection){
			var allFields = MAG_Utils.getAllFields(data.f._fields.collection.value);
			data.target_field_variables = allFields;
		}
		
	}
	catch (main_err) {
		gs.error("NOTIFs Widget::Form: " + main_err.name + " \n >> " + main_err.message);
	}
})($sp, input, data, options, gs);
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-19 22:18:12</sys_created_on>
        <sys_id>9d696959db1010108599656b4b9619f8</sys_id>
        <sys_mod_count>116</sys_mod_count>
        <sys_name>MAG Notif Form</sys_name>
        <sys_package display_value="MAG Notification Editor" source="x_447233_mag_notif">d546ad95db1010108599656b4b9619be</sys_package>
        <sys_policy/>
        <sys_scope display_value="MAG Notification Editor">d546ad95db1010108599656b4b9619be</sys_scope>
        <sys_update_name>sp_widget_9d696959db1010108599656b4b9619f8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-10 21:06:22</sys_updated_on>
        <template><![CDATA[<div>
  <!-- readOnly due to scope -->
  <div ng-if="data.f.outOfScope" class="read-only-message">
    <div class="alert alert-info sp-cross-scope" role="alert">
      <p>${This record is in the <strong>{{data.f.recordScopeLabel}}</strong> application, but <strong>{{data.f.currentScopeLabel}}</strong> is the current application.}</p>
    </div>
  </div>



  <div id="DialogNoData" ng-if="!data.isTargetValid">
    <dialog open><h2>
      ${ Start by selecting an item from the List on the side.}
      </h2></dialog>

    <!--
Alternative solutions for centering in this amazing page:
https://levelup.gitconnected.com/10-ways-to-center-a-div-horizontally-and-vertically-in-css-53ca5eb912db

TODO:
 -- Handle Mobile and small screens somehow
snmCabrillo.modal.presentModal("MY MODAL!!", "", snmCabrillo.modal.CLOSE_BUTTON_STYLE_CLOSE, snmCabrillo.modal.MODAL_PRESENTATION_STYLE_FORM_SHEET);

-->
  </div>



  <!-- Preview URL for iFrame
.../notification_preview_html_body.do?
sysparm_record_id=1c741bd70b2322007518478d83673af3
&sysparm_user_id=6816f79cc0a8016401c5a33be04be441
&sysparm_event_id=
&sysparm_notification_id=24e34b54c61122aa0108c1b7a33697cf
&sysparm_changed_fields=
&sys_target=sysevent_email_action
&sys_uniqueValue=24e34b54c61122aa0108c1b7a33697cf
&sys_row=0
&sysparm_encoded_record=
-->



  <!--
<sp-tinymce-editor 
attachment-guid = "-1"
field="c.commentsField"
record-table-name="'kb_feedback_tmce'"
aria-labelledby="{{c.commentsPrompt}}"
class="kb-comment-input" id="comment">
</sp-tinymce-editor>

<div id="EditableContent" ng-if="data.isTargetValid">

-->

  <div id="EditableContent" ng-if="data.isTargetValid">

    <section id="InputFields">
      <p>

        <span class="input_label">${ Send To}</span>
        <select id="notification_to" class="input_field" name="destination" disabled>
          <option value="">...functionality coming soon...</option>
          <option value="Agents">Agents</option>
          <option value="Stakeholders">Stakeholders</option>
          <option value="Other">Other</option>
          <option value="All">All</option>
        </select>
      </p>

      <p>

        <span class="input_label">${⏱️ Send On}</span>
        <select id="notification_when" class="input_field" name="when" disabled>
          <option value="">...functionality coming soon...</option>
          <option value="New">New</option>
          <option value="Update">Update</option>
          <option value="Both">Both</option>
          <option value="Event">Event</option>
          <option value="Never">Never (inactive)</option>
        </select>
      </p>
      

      <p>

        <span class="input_label">${ Template}</span>
        <a href="?id=lf&table=sysevent_email_template&filter=&sys_id={{data.f._fields.template.value}}">
          <span class="info_only_fixed link_box"
                name="template_field"
                id="sp_formfield_template">
            {{data.f._fields.template.displayValue}} ⬈
          </span>
        </a>
      </p>

      <p>
        <span class="input_label">${️‍️ Subject}</span>
        <input name="subject_field"
               id="sp_formfield_subject"
               class="form-control input_field"
               maxlength="254"
               data-type="text"
               ng-readonly="data.f._fields.subject.readonly"
               ng-attr-placeholder=""
               type="text"
               ng-model="data.f._fields.subject.value">
        <button
                id="sp_save_button"
                type="button"
                name="SAVE"
                class="btn btn-primary"
                ng-click="c.saveRecord()">
          ${SAVE}
        </button>
      </p>
    </section>


    <section id="InputBodyEditor">
      <sp-tinymce-editor
                         attachment-guid = "-1"
                         field="::data.f._fields.message_html"
                         record-table-name="::data.table_tmce"
                         aria-labelledby="aria-labelledby"
                         ng-readonly="data.f._fields.message_html.readonly"
                         ng-model-options="{}"
                         ng-model="data.f._fields.message_html.value"
                         id="MessageHTMLBox">
      </sp-tinymce-editor>
    </section>

    
    <!-- Possible 'roles': https://www.w3.org/WAI/PF/HTML/wiki/RoleAttribute 
Icons (emojipedia) -- ️️

            <li id="macro_reference" class="list-group-item">
              <span class="tree_icon_pre"></span>
              <a name="" role="treeitem" tabindex="0" aria-level="1">${total_value}</a>
            </li>
-->

    <aside class="panel-group">
      <section role="tree" class="panel panel-default">
        <header role="presentation" class="panel-heading">
          <h3 class="panel-title">
            <img class="tree" aria-hidden="true" src="images/gwt/treenode_expand_minus.gifx" alt="" style="margin-left: -16px;">
            <img alt="" aria-hidden="true" src="images/gwt/folder_open.gifx">
            <a data-toggle="collapse" href="#collapse1">Use ticket variables</a>
          </h3>
        </header>

        <div role="group" id="collapse1" class="panel-collapse collapse">
          <ul role="presentation" id="macro_list" class="list-group">
            <li id="macro_reference"
                class="list-group-item"
                ng-repeat="field in ::data.target_field_variables track by field.name">
              <img ng-if="field.type != 'reference'"
                   class="tree_icon_in" alt="task"
                   aria-hidden="true" src="images/indexed2.gifx"
                   title="" data-original-title="task">
              <img ng-if="field.type == 'reference'"
                   class="tree_icon_in" alt=""
                   aria-hidden="true" src="images/gwt/folder_closed.gifx">
              <span
                    ng-click="variable_to_clipboard(field.name, document || $document)"
                    title="{{::field.name}}"
                    class="field_variable">{{::field.label}}</span>
            </li>
          </ul>
          <div class="panel-footer">...click any to copy...</div>
        </div>
      </section>
    </aside>


  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
